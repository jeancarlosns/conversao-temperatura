name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, labeled, closed, synchronized, unlabeled]

    
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do Código
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Instalar Dependências
        run: npm install

      - name: Executar Testes
        run: npm test

      - name: Construir Imagem Docker
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/conversao-temperatura:${{ github.sha }} .

      - name: Logar no Docker Hub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push da Imagem no Docker Hub
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/conversao-temperatura:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/conversao-temperatura:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/conversao-temperatura:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/conversao-temperatura:latest

  deploy-production:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout do Código
        uses: actions/checkout@v3

      - name: Instalar Kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Aplicar Deploy no Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl rollout status deployment/conversao-temperatura

      - name: Executar Testes de Produção
        run: npm test

  preview:
    runs-on: ubuntu-latest
    needs: build
    if: github.event.pull_request.head.repo.full_name == github.repository && contains(github.event.pull_request.labels.*.name, 'preview')

    steps:
      - name: Checkout do Código
        uses: actions/checkout@v3

      - name: Instalar Kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Deploy Ambiente de Preview
        run: |
          kubectl create namespace preview-${{ github.head_ref }} || true
          kubectl apply -f k8s/deployment.yaml -n preview-${{ github.head_ref }}

      - name: Executar Testes de Preview
        run: npm test

  destroy-preview:
    runs-on: ubuntu-latest
    if: github.event.action == 'closed' || github.event.action == 'unlabeled' || github.event.action == 'merged'

    steps:
      - name: Instalar Kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Destruir Ambiente de Preview
        run: |
          kubectl delete namespace preview-${{ github.head_ref }} || true


